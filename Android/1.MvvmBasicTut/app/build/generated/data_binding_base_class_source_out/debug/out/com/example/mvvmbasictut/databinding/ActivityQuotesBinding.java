// Generated by view binder compiler. Do not edit!
package com.example.mvvmbasictut.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mvvmbasictut.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQuotesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddQuote;

  @NonNull
  public final EditText editTextAuthor;

  @NonNull
  public final EditText editTextQuote;

  @NonNull
  public final TextView textViewQuotes;

  private ActivityQuotesBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAddQuote,
      @NonNull EditText editTextAuthor, @NonNull EditText editTextQuote,
      @NonNull TextView textViewQuotes) {
    this.rootView = rootView;
    this.buttonAddQuote = buttonAddQuote;
    this.editTextAuthor = editTextAuthor;
    this.editTextQuote = editTextQuote;
    this.textViewQuotes = textViewQuotes;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_quotes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_quote;
      Button buttonAddQuote = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddQuote == null) {
        break missingId;
      }

      id = R.id.editText_author;
      EditText editTextAuthor = ViewBindings.findChildViewById(rootView, id);
      if (editTextAuthor == null) {
        break missingId;
      }

      id = R.id.editText_quote;
      EditText editTextQuote = ViewBindings.findChildViewById(rootView, id);
      if (editTextQuote == null) {
        break missingId;
      }

      id = R.id.textView_quotes;
      TextView textViewQuotes = ViewBindings.findChildViewById(rootView, id);
      if (textViewQuotes == null) {
        break missingId;
      }

      return new ActivityQuotesBinding((ConstraintLayout) rootView, buttonAddQuote, editTextAuthor,
          editTextQuote, textViewQuotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
